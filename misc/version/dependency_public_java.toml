# 版本号
[versions]
# ----- 实用工具 -----
apachecommons_io = "1.3.2"
slf4j-simple = "2.0.9"
gson = "2.10.1"


# ----- 数据存储 -----
jdbc_sqlite = "3.46.0.0"
jdbc_mariadb = "3.2.0"

mybatis = "3.5.16"
mybatis_springboot-starter = "3.0.4"

druid = "1.2.25"


# ----- 网络通讯 -----
okhttp3_bom = "4.12.0"

retrofit2_bom = "2.11.0"

okhttps_core = "4.0.3"


# ----- JavaEE框架 -----
springboot_bom = "3.5.0"


# ----- 测试工具 -----
junit4 = "4.13.2"

junit5_bom = "5.12.1"

mockito_core = "5.16.1"


# ----- 插件 -----
spring_springboot = "3.5.0"
spring_dependency = "1.1.7"


# 组件
[libraries]
# ----- 实用工具 -----
# < Apache通用工具 >
# IO
apachecommons_io = { group = "org.apache.commons", name = "commons-io", version.ref = "apachecommons_io" }

# < SLF4J >
# SLF4J・Simple
slf4j-simple = { group = "org.slf4j", name = "slf4j-simple", version.ref = "slf4j-simple" }

# GSON
gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" }


# ----- 数据存储 -----
# <JDBC驱动>
# SQLite
jdbc_sqlite = { group = "org.xerial", name = "sqlite-jdbc", version.ref = "jdbc_sqlite" }
# MariaDB
jdbc_mariadb = { group = "org.mariadb.jdbc", name = "mariadb-java-client", version.ref = "jdbc_mariadb" }

# <数据库工具>
# MyBatis
mybatis_core = { group = "org.mybatis", name = "mybatis", version.ref = "mybatis" }
# MyBatis・SpringBoot支持
mybatis_springboot-starter = { group = "org.mybatis.spring.boot", name = "mybatis-spring-boot-starter", version.ref = "mybatis_springboot-starter" }

# <数据库连接池>
# Druid・核心
druid_core = { group = "com.alibaba", name = "druid", version.ref = "druid" }
# Druid・SpringBoot支持
druid_springboot-starter = { group = "com.alibaba", name = "druid-spring-boot-starter", version.ref = "druid" }


# ----- 网络通讯 -----
# < OkHttp3 >
# BOM文件（其他组件的版本配置文件）
okhttp3_bom = { group = "com.squareup.okhttp3", name = "okhttp-bom", version.ref = "okhttp3_bom" }
# 核心
okhttp3_core = { group = "com.squareup.okhttp3", name = "okhttp" }
# 调试工具
okhttp3_logging-interceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor" }
okhttp3_mockwebserver = { group = "com.squareup.okhttp3", name = "mockwebserver" }

# < Retrofit >
# BOM文件（其他组件的版本配置文件）
retrofit2_bom = { group = "com.squareup.retrofit2", name = "retrofit-bom", version.ref = "retrofit2_bom" }
# 核心
retrofit2_core = { group = "com.squareup.retrofit2", name = "retrofit" }

# < OkHttps >
# 核心
okhttps_core = { group = "cn.zhxu", name = "okhttps", version.ref = "okhttps_core" }
# GSON支持
okhttps_gson = { group = "cn.zhxu", name = "okhttps-gson", version.ref = "okhttps_core" }
# Jackson支持
okhttps_jackson = { group = "cn.zhxu", name = "okhttps-jackson", version.ref = "okhttps_core" }


# ----- JavaEE框架 -----
# < SpringBoot >
# BOM文件（其他组件的版本配置文件）
springboot_bom = { group = "org.springframework.boot", name = "spring-boot-dependencies", version.ref = "springboot_bom" }
# Starter・核心
springboot_starter_core = { group = "org.springframework.boot", name = "spring-boot-starter" }
# Starter・Web
springboot_starter_web = { group = "org.springframework.boot", name = "spring-boot-starter-web" }
# Starter・测试
springboot_starter_test = { group = "org.springframework.boot", name = "spring-boot-starter-test" }


# ----- 测试工具 -----
# < JUnit4 >
junit4 = { group = "junit", name = "junit", version.ref = "junit4" }

# < JUnit5 >
# BOM文件（其他组件的版本配置文件）
junit5_bom = { group = "org.junit", name = "junit-bom", version.ref = "junit5_bom" }
# 平台启动器
junit5_launcher = { group = "org.junit.platform", name = "junit-platform-launcher" }
# Jupiter（JUnit5引擎的实现）
junit5_jupiter = { group = "org.junit.jupiter", name = "junit-jupiter-engine" }
# Vintage（JUnit4及更早版本的兼容模块，可以运行JUnit4以及更早版本的测试代码，可选。）
junit5_vintage = { group = "org.junit.vintage", name = "junit-vintage-engine" }

# < Mockito >
mockito_core = { group = "org.mockito", name = "mockito-core", version.ref = "mockito_core" }


# Gradle插件
[plugins]
# ----- Gradle内置插件 -----
# Java・基础（不建议直接使用，可以选择更具体的库或者应用程序。）
java_base = { id = "org.gradle.java" }
# Java・库
java_library = { id = "org.gradle.java-library" }
# Java・应用程序
java_application = { id = "org.gradle.application" }


# ----- Spring -----
# SpringBoot插件（提供构建JAR/WAR包、调试应用等功能，版本号与SpringBoot同步。）
spring_springboot = { id = "org.springframework.boot", version.ref = "spring_springboot" }
# Spring版本插件（为SpringBoot等模块引入BOM文件，子模块声明依赖时无需指定版本，以SpringBoot插件版本为准。）
spring_dependency = { id = "io.spring.dependency-management", version.ref = "spring_dependency" }
